{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["// Typing 하는 방법 두 가지 : Type Alias , Interface\n// Union 타입으로 선언을 해야하면 Interface는 쓰지 못함. Type Alias 사용해야한다.\n\n// type alias\n// type Store = {\n//   currentPage : number;\n//   feeds : NewsFeed[];\n// }\n\n// readonly를 사용해서 더 제약을 거는 이런 방식을 선호해야 함. (실수 방지, 안전)\n// Interface\n\n// 상속을 하는 두 가지 방법 : 클래스, 믹스인\n\ninterface Store {\n  currentPage : number;\n  feeds : NewsFeed[];\n}\n\ninterface News {\n  readonly id : number;\n  readonly time_ago : string;\n  readonly title : string;\n  readonly url : string;\n  readonly user : string;\n  readonly content : string;\n}\n\ninterface NewsFeed extends News { // News &를 인터섹션이라고 부른다 (앰퍼센트)\n  readonly comments_count : number;\n  readonly points : number;\n  read? : boolean;\n}\n\ninterface NewsDetail extends News {\n  readonly comments : NewsDetailComment[];\n}\n\ninterface NewsDetailComment extends News {\n  readonly comments : NewsDetailComment[];\n  readonly level : number;\n}\n\nconst ajax : XMLHttpRequest = new XMLHttpRequest();\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\nconst container : HTMLElement | null = document.getElementById('root');\n\nconst store : Store = {\n    currentPage : 1,\n    feeds : []\n};\n\n// 이런식으로 class화 시키는것이 현재 기능으로는 비효율적이긴 하지만 앞으로 커지는 기능에 대한 대비로 이렇게 하는 것이 좋다\n// class Api {\n//   url : string;\n//   ajax : XMLHttpRequest;\n\n//   constructor(url : string) {\n//     this.url = url;\n//     this.ajax = new XMLHttpRequest();\n//   }\n\n//   protected getRequest<AjaxResponseType>() : AjaxResponseType {\n//     this.ajax.open('GET', this.url, false);\n//     this.ajax.send();\n\n//     // 경우에 따라서 반환하는 값이 NewsFeed[]일때도, NewsDetail일때도 있는 상황\n//     return JSON.parse(this.ajax.response);\n//   }\n// }\n\nfunction applyApiMixins(targetClass : any, baseClasses : any[]) {\n  // 일단 이해하긴 어렵고 그냥 역할을 이용하면 좋을듯, 다중 상속을 지원하기 위함 (합성시키기)\n  baseClasses.forEach(baseClass => {\n    Object.getOwnPropertyNames(baseClass.prototype).forEach(name => {\n      const descriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, name);\n\n      if (descriptor) {\n        Object.defineProperty(targetClass.prototype, name, descriptor);\n      }\n    });\n  });\n}\n\n// 믹스인 방법\n// 이 방법으로 코드의 상속 구현이 유연해질 수 있다.\n// extends는 다중상속을 지원하지 않음\n\nclass Api {\n  getRequest<AjaxResponseType>(url : string) : AjaxResponseType {\n    const ajax = new XMLHttpRequest();\n    ajax.open('GET', url, false);\n    ajax.send();\n\n    // 경우에 따라서 반환하는 값이 NewsFeed[]일때도, NewsDetail일때도 있는 상황\n    return JSON.parse(ajax.response);\n  }\n}\n\n// class NewsFeedApi extends Api {\n//   getData() : NewsFeed[] {\n//     return this.getRequest<NewsFeed[]>();\n//   }\n// }\n\n// 믹스인 방법\nclass NewsFeedApi {\n  getData() : NewsFeed[] {\n    return this.getRequest<NewsFeed[]>(NEWS_URL);\n  }\n}\n\n// class NewsDetailApi extends Api {\n//   getData() : NewsDetail {\n//     return this.getRequest<NewsDetail>();\n//   }\n// }\n\n// 믹스인 방법\nclass NewsDetailApi {\n  getData(id : string) : NewsDetail {\n    return this.getRequest<NewsDetail>(CONTENT_URL.replace('@id', id));\n  }\n}\n\n// 믹스인\ninterface NewsFeedApi extends Api {}; // TypeScript 컴파일러에게 이 두가지가 합성될것임을 알려주는 코드\ninterface NewsDetailApi extends Api {};\napplyApiMixins(NewsFeedApi, [Api]);\napplyApiMixins(NewsDetailApi, [Api]);\n\n// 제네릭을 이용하면 A,B,C,D 유형의 인풋값에 대해서 A유형엔 A유형으로 반환 할 수 있게 해준다,\nconst getData = <AjaxResponseType>(url : string) : AjaxResponseType => {\n    ajax.open('GET', url, false);\n    ajax.send();\n\n    // 경우에 따라서 반환하는 값이 NewsFeed[]일때도, NewsDetail일때도 있는 상황\n    return JSON.parse(ajax.response);\n}\n\nconst updateView = (template : string) : void => {\n  if (container) { // type guard\n    container.innerHTML = template;\n  } else {\n    console.log(\"ERROR\");\n  }\n}\n\nconst makeFirstFeedForReadState = (feeds : NewsFeed[]) : NewsFeed[] => {\n    // 처음 피드 데이터를 받아오면서 read속성을 false값으로 초기화해서 부여하기 위한 함수\n    for (let i = 0 ; i < feeds.length ; i++) {\n        feeds[i].read = false;\n    }\n    return feeds;\n}\n\nconst makeComment = (comments : NewsDetailComment[]) : string => {\n  const commentString = [];\n\n  for (let i = 0; i < comments.length ; i++) {\n      const comment : NewsDetailComment = comments[i];\n      commentString.push(`\n      <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\n        <div class=\"text-gray-400\">\n          <i class=\"fa fa-sort-down mr-2\"></i>\n          <strong>${comment.user}</strong> ${comment.time_ago}\n        </div>\n        <p class=\"text-gray-700\">${comment.content}</p>\n      </div>      \n    `);\n\n    if (comment.comments.length > 0) {\n        commentString.push(makeComment(comment.comments));\n    }\n  }\n\n  return commentString.join('');\n}\n\nconst displayNewsFeed = () : void => {\n    const api = new NewsFeedApi();\n    let newsFeeds : NewsFeed[] = store.feeds;\n\n    if (newsFeeds.length == 0) {\n        newsFeeds = store.feeds = makeFirstFeedForReadState(api.getData());\n    }\n\n    let template = `\n    <div class=\"bg-gray-600 min-h-screen\">\n      <div class=\"bg-white text-xl\">\n        <div class=\"mx-auto px-4\">\n          <div class=\"flex justify-between items-center py-6\">\n            <div class=\"flex justify-start\">\n              <h1 class=\"font-extrabold\">Hacker News</h1>\n            </div>\n            <div class=\"items-center justify-end\">\n              <a href=\"#/page/@prev_page\" class=\"text-gray-900\">\n                Previous\n              </a>\n              <a href=\"#/page/@next_page\" class=\"text-gray-900 ml-4\">\n                Next\n              </a>\n            </div>\n          </div> \n        </div>\n      </div>\n      <div class=\"p-4 text-2xl text-gray-700\">\n        @news_list        \n      </div>\n    </div>\n  `;\n\n    const newsList = [];\n    const maxPageNumber = newsFeeds.length / 10;\n    for (let i = (store.currentPage - 1) * 10 ; i < store.currentPage * 10 ; i++) {\n        newsList.push(`\n            <div class=\"p-6 ${newsFeeds[i].read ? 'bg-green-600' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\n            <div class=\"flex\">\n                <div class=\"flex-auto\">\n                <a href=\"#/detail/${newsFeeds[i].id}\">${newsFeeds[i].title}</a>  \n                </div>\n                <div class=\"text-center text-sm\">\n                <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${newsFeeds[i].comments_count}</div>\n                </div>\n            </div>\n            <div class=\"flex mt-3\">\n                <div class=\"grid grid-cols-3 text-sm text-gray-500\">\n                <div><i class=\"fas fa-user mr-1\"></i>${newsFeeds[i].user}</div>\n                <div><i class=\"fas fa-heart mr-1\"></i>${newsFeeds[i].points}</div>\n                <div><i class=\"far fa-clock mr-1\"></i>${newsFeeds[i].time_ago}</div>\n                </div>  \n            </div>\n            </div>    \n      `);\n    }\n    template = template.replace('@news_list', newsList.join(''));\n    template = template.replace('@prev_page', String(store.currentPage - 1 > 1 ? store.currentPage - 1 : 1));\n    template = template.replace('@next_page', String(store.currentPage + 1 > maxPageNumber ? maxPageNumber : store.currentPage + 1));\n\n    updateView(template);\n}\n\nconst displayNewsDetail = () : void => {\n    // 앵커태그의 해시가 변경되었을때 이벤트가 발생한다.\n    // 해시를 CONTENT_URL의 id란에 넣고 API를 호출해야함\n    // 해시를 주소에서 가져와야 하는데 주소 맨끝에 해시가 붙어있으니까 코드는 다음과 같다\n    const id = location.hash.substring(9);\n    const api = new NewsDetailApi();\n\n    for (let i = 0; i < store.feeds.length ; i++) {\n        if (store.feeds[i].id == Number(id)) {\n            store.feeds[i].read = true;\n            break;\n        }\n    }\n\n    const newsContent = api.getData(id);\n    let template = `\n    <div class=\"bg-gray-600 min-h-screen pb-8\">\n      <div class=\"bg-white text-xl\">\n        <div class=\"mx-auto px-4\">\n          <div class=\"flex justify-between items-center py-6\">\n            <div class=\"flex justify-start\">\n              <h1 class=\"font-extrabold\">Hacker News</h1>\n            </div>\n            <div class=\"items-center justify-end\">\n              <a href=\"#/page/${store.currentPage}\" class=\"text-gray-500\">\n                <i class=\"fa fa-times\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\n        <h2>${newsContent.title}</h2>\n        <div class=\"text-gray-400 h-20\">\n          ${newsContent.content}\n        </div>\n\n        @comments\n\n      </div>\n    </div>\n    `;\n\n    template = template.replace('@comments', makeComment(newsContent.comments));\n\n    updateView(template);\n}\n\nconst router = () : void => {\n    const routePath = location.hash;\n    if (routePath == '') {\n        // #만 있으면 그냥 빈 문자열 ''로 나온다.\n        displayNewsFeed();\n    } else if (routePath.indexOf('/page') >= 0) {\n        store.currentPage = Number(routePath.substring(7));\n        displayNewsFeed();\n    } else {\n        displayNewsDetail();\n    }\n}\n\nwindow.addEventListener('hashchange', router);\n\nrouter();\n\n"]}